{"version":3,"sources":["style.js","App.js","index.js"],"names":["injectGlobal","_templateObject","Object","taggedTemplateLiteral","app","css","_templateObject2","table","_templateObject3","_templateObject4","_templateObject5","require","config","App","gridRef","useRef","react_default","a","createElement","className","styles","href","id","width","height","src","style","background","color","onClick","gridjsInstance","current","getInstance","updateConfig","data","JSON","parse","atob","styles2","forceRender","styles3","styles4","gridjs_production_es_min","ref","columns","name","formatter","_","row","html","concat","cells","search","autoWidth","resizable","sort","pagination","enabled","limit","__webpack_require__","d","__webpack_exports__","url","urles","urlfr","fetch","then","jsonData","text","printItes","printItfr","printIt","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App","Start"],"mappings":"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","file":"static/js/main.3256a965.chunk.js","sourcesContent":["import { css, injectGlobal } from 'emotion'\nimport 'gridjs/dist/theme/mermaid.css'\n\ninjectGlobal`\n  body {\n    \n    background-color: #0e121c;\n    //background-image: url('https://64.media.tumblr.com/6fa9ad9f859cf058bfe19a2536b0aa11/tumblr_pkv647vWBM1xp1j77o1_540.gifv')\n  }\n\n  .App {\n    \n    font-family: Tahoma;\n    \n  }\n`\n\nexport const app = css`\n  opacity: 0.85;\n  transition: 0.3s all;\n  .theframe {\n  }\n\n  #theframe2 {\n    position: absolute;\n    left: 830px;\n    top: 68px;\n  }\n\n  #disk{\n    position:absolute;\n    z-index:100;\n    left: 1110px;\n    top:14px;\n   \n   \n\n   \n    \n}\n  #disk2{\n    position:absolute;\n    z-index:103;\n    left: 1110px;\n    top:14px;\n    font-size:30px;\n    opacity:0;\n}\n#en{\n    position:absolute;\n    z-index:103;\n    left: 300px;\n    top:14px;\n    font-size:20px;\n    opacity:100;\n}\n#es{\n    position:absolute;\n    z-index:104;\n    left: 360px;\n    top:14px;\n    font-size:20px;\n    opacity:100;\n}\n#fr{\n    position:absolute;\n    z-index:105;\n    left: 420px;\n    top:14px;\n    font-size:20px;\n    opacity:100;\n}\n}\n\n#invis{\n  position:absolute;\n\n  left: 900px;\n}\n`\n\nexport const selectGroup = css`\n  display: flex;\n  padding: 2px;\n\n  select + select {\n    margin-left: 5px;\n  }\n`\n\nexport const select = css`\n  height: 28px;\n  padding-right: 13px;\n  padding-left: 13px;\n  border-radius: 5px;\n  appearance: none;\n  font-family: monospace;\n  font-weight: 500;\n`\n\nexport const table = css`\n  tbody {\n    td {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      word-break: keep-all;\n      font-family: monospace;\n      height: 5;\n      background-color: rgba(15, 21, 37, 0.95);\n\n      color: white;\n      font-size: 18px;\n      border-color: rgba(15, 21, 37, 0);\n    }\n  }\n\n  th {\n    font-family: monospace;\n    border-color: #0000;\n    color: white;\n    font-size: 18px;\n    background-color: rgba(15, 21, 37, 0.85);\n  }\n\n  footer {\n    font-family: monospace;\n  }\n`\n","import React from 'react'\nimport { Grid } from 'gridjs-react'\nimport { updateConfig } from 'gridjs-react'\nimport { html } from 'gridjs'\nimport { styles2 } from './index'\nimport { styles3 } from './index'\nimport { styles4 } from './index'\nimport getData2 from './index'\nimport Select from './Select'\nimport * as styles from './style'\nimport { css } from '@emotion/css'\nimport { get } from 'jquery'\nimport { useRef } from 'react'\nvar check = false\n\nrequire('dotenv').config()\n\nconst jsonData = require('./kogasa.json')\nfunction myFunction() {}\nfunction App() {\n  const gridRef = useRef()\n\n  ////////////////////ENGLISH//////////////////////\n  const changeMyGriden = () => {\n    const gridjsInstance = gridRef.current.getInstance()\n    gridjsInstance.updateConfig({\n      data: JSON.parse(atob(styles2))\n    })\n\n    gridjsInstance.forceRender()\n  }\n\n  /////////////////////SPANISH/////////////////////\n  const changeMyGrides = () => {\n    //console.log(styles3)\n    const gridjsInstance = gridRef.current.getInstance()\n    const urles =\n      'https://raw.githubusercontent.com/k0gasa/XSStrike/master/adblocksp.txt'\n\n    gridjsInstance.updateConfig({\n      data: JSON.parse(atob(styles3))\n    })\n\n    gridjsInstance.forceRender()\n  }\n  ///////////////////////////FRENCH///////////////////\n  const changeMyGridfr = () => {\n    //console.log(styles4)\n    const gridjsInstance = gridRef.current.getInstance()\n    gridjsInstance.updateConfig({\n      data: JSON.parse(atob(styles4))\n    })\n\n    gridjsInstance.forceRender()\n  }\n  return (\n    <div className={styles.app}>\n      <a href=\"https://discord.gg/VkvnNvUqyp\" id=\"disk2\">\n        AAAAAA\n      </a>\n\n      <img\n        width=\"140\"\n        height=\"40\"\n        id=\"disk\"\n        src=\"https://icon-library.com/images/discord-icon-png/discord-icon-png-0.jpg\"\n      />\n      <button\n        id=\"en\"\n        style={{ background: '#45516E', color: 'white' }}\n        onClick={changeMyGriden}\n      >\n        EN\n      </button>\n      <button\n        id=\"es\"\n        style={{ background: '#45516E', color: 'white' }}\n        onClick={changeMyGrides}\n      >\n        ES\n      </button>\n      <button\n        id=\"fr\"\n        style={{ background: '#45516E', color: 'white' }}\n        onClick={changeMyGridfr}\n      >\n        FR\n      </button>\n\n      <Grid\n        ref={gridRef}\n        data={JSON.parse(atob(styles2))}\n        columns={[\n          {\n            id: 'Photo',\n            name: 'Photo',\n            width: 1,\n            formatter: (_, row) =>\n              html(`<img width=75 height=75 src='${row.cells[0].data}'</img>`)\n          },\n          {\n            id: 'Item',\n            name: 'Name',\n            width: 40\n          },\n          {\n            id: 'ID',\n            name: 'ID',\n            width: 1\n          },\n          {\n            id: 'unity3d',\n            name: 'Unity3D',\n            width: 1,\n            formatter: (_, row) =>\n              html(`\n            <button style=\"height:70px;width=100px;background-color:#45516E;color:white\" onclick=\"\n\n       \n            navigator.clipboard.writeText('${row.cells[3].data}')\n            \n\n\n            \">Copy Unity3D Link</button>`)\n          }\n        ]}\n        search={true}\n        autoWidth={true}\n        resizable={true}\n        sort={true}\n        //width={800}\n        pagination={{\n          enabled: true,\n          limit: 4\n        }}\n        className={{\n          table: styles.table\n        }}\n      />\n      <updateConfig />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport getData from './App'\nlet styles2 = ''\nlet styles3 = ''\nlet styles4 = ''\nconst url =\n  'https://raw.githubusercontent.com/k0gasa/XSStrike/master/adblock.txt'\nconst urles =\n  'https://raw.githubusercontent.com/k0gasa/XSStrike/master/adblocksp.txt'\nconst urlfr =\n  'https://raw.githubusercontent.com/k0gasa/XSStrike/master/adblockfr.txt'\n\nvar check = false\n\nfunction Start() {\n  fetch(urles)\n    .then((jsonData) => jsonData.text())\n    .then((data) => printItes(data))\n\n  fetch(urlfr)\n    .then((jsonData) => jsonData.text())\n    .then((data) => printItfr(data))\n\n  fetch(url)\n    .then((jsonData) => jsonData.text())\n    .then((data) => printIt(data))\n\n  let printItes = (data) => {\n    styles3 = data\n  }\n\n  let printItfr = (data) => {\n    styles4 = data\n  }\n  let printIt = (data) => {\n    styles2 = data\n\n    const rootElement = document.getElementById('root')\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      rootElement\n    )\n  }\n}\nStart()\nexport { styles2 }\nexport { styles3 }\nexport { styles4 }\n"],"sourceRoot":""}